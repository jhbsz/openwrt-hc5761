Index: package/network/services/odhcpd/patches/100-nodnsv6-opts.patch
===================================================================
--- package/network/services/odhcpd/patches/100-nodnsv6-opts.patch	(revision 0)
+++ package/network/services/odhcpd/patches/100-nodnsv6-opts.patch	(revision 0)
@@ -0,0 +1,30 @@
+--- a/src/dhcpv6.c
++++ b/src/dhcpv6.c
+@@ -283,6 +283,13 @@
+ 		[IOV_RELAY_MSG] = {NULL, 0}
+ 	};
+ 
++	if (getenv("NODNSV6")) {
++		iov[IOV_DNS].iov_len = 0;
++		iov[IOV_DNS_ADDR].iov_len = 0;
++		iov[IOV_SEARCH].iov_len = 0;
++		iov[IOV_SEARCH_DOMAIN].iov_len = 0;
++	}
++
+ 	uint8_t *opts = (uint8_t*)&hdr[1], *opts_end = (uint8_t*)data + len;
+ 	if (hdr->msg_type == DHCPV6_MSG_RELAY_FORW)
+ 		handle_nested_message(data, len, &opts, &opts_end, iov);
+--- a/src/router.c
++++ b/src/router.c
+@@ -443,6 +443,11 @@
+ 			{&dns, (dns_cnt) ? sizeof(dns) : 0},
+ 			{dns_addr, dns_cnt * sizeof(*dns_addr)},
+ 			{search, search->len * 8}};
++	if (getenv("NODNSV6")) {
++		iov[2].iov_len = 0;
++		iov[3].iov_len = 0;
++		iov[4].iov_len = 0;
++	}
+ 	struct sockaddr_in6 all_nodes = {AF_INET6, 0, 0, ALL_IPV6_NODES, 0};
+ 	odhcpd_send(router_event.uloop.fd,
+ 			&all_nodes, iov, ARRAY_SIZE(iov), iface);
Index: package/network/services/odhcpd/files/odhcpd.init
===================================================================
--- package/network/services/odhcpd/files/odhcpd.init	(revision 43770)
+++ package/network/services/odhcpd/files/odhcpd.init	(working copy)
@@ -7,6 +7,7 @@
 start_service() {
 	procd_open_instance
 	procd_set_param command /usr/sbin/odhcpd
+	procd_set_param env NODNSV6=Y
 	procd_set_param respawn
 	procd_close_instance
 }
